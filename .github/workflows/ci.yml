name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Initialize Terraform
      run: terraform -chdir=./infrastructure/terraform init

    - name: Get Terraform Outputs
      id: tf-outputs
      run: |
        ECR_URL_MICROSERVICE_1=$(terraform -chdir=./infrastructure/terraform output -raw microservice_1_ecr_url)
        ECR_URL_MICROSERVICE_2=$(terraform -chdir=./infrastructure/terraform output -raw microservice_2_ecr_url)
        SSM_PARAM_NAME=$(terraform -chdir=./infrastructure/terraform output -raw ssm_parameter_name)
        echo "ECR_URL_MICROSERVICE_1=$ECR_URL_MICROSERVICE_1" >> $GITHUB_ENV
        echo "ECR_URL_MICROSERVICE_2=$ECR_URL_MICROSERVICE_2" >> $GITHUB_ENV
        echo "SSM_PARAM_NAME=$SSM_PARAM_NAME" >> $GITHUB_ENV

    - name: Build and Push Microservice 1
      run: |
        docker build -t $ECR_URL_MICROSERVICE_1:latest ./microservice-1
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $ECR_URL_MICROSERVICE_1
        docker push $ECR_URL_MICROSERVICE_1:latest

    - name: Build and Push Microservice 2
      run: |
        docker build -t $ECR_URL_MICROSERVICE_2:latest ./microservice-2
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $ECR_URL_MICROSERVICE_2
        docker push $ECR_URL_MICROSERVICE_2:latest

    - name: Deploy Microservices to ECS
      run: |
        aws ecs update-service --cluster $(terraform -chdir=./infrastructure/terraform output -raw ecs_cluster_id) \
          --service microservice-1-service --force-new-deployment
        aws ecs update-service --cluster $(terraform -chdir=./infrastructure/terraform output -raw ecs_cluster_id) \
          --service microservice-2-service --force-new-deployment