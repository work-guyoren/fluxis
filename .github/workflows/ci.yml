name: CI Pipeline

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  build-microservice-1:
    name: Build, Test, and Push Microservice 1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./microservice-1/requirements.txt
      - name: Run unit tests
        run: |
          set -o pipefail
          PYTHONPATH=./microservice-1 python3 -m unittest discover -s ./microservice-1/tests -p "*.py" 2>&1 | tee test-results-microservice-1.log || true
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: microservice-1-test-results-${{ github.run_id }}
          path: test-results-microservice-1.log
      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - name: Verify AWS Credentials
        run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] || [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "Error: AWS credentials are missing."
            exit 1
          fi
          echo "AWS credentials are present."
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          audience: sts.amazonaws.com
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Get ECR Repository URL
        id: ecr-url
        run: |
          ECR_URL_MICROSERVICE_1=$(aws ecr describe-repositories --repository-names ${{ inputs.environment }}-microservice-1 --query 'repositories[0].repositoryUri' --output text)
          echo "ECR_URL_MICROSERVICE_1=$ECR_URL_MICROSERVICE_1" >> $GITHUB_ENV
      - name: Get Git Commit Hash
        id: git-info
        run: echo "GIT_COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Build and Push Docker Image
        run: |
          docker build -t $ECR_URL_MICROSERVICE_1:latest -t $ECR_URL_MICROSERVICE_1:${{ env.GIT_COMMIT_HASH }} ./microservice-1
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $ECR_URL_MICROSERVICE_1
          docker push $ECR_URL_MICROSERVICE_1:latest
          docker push $ECR_URL_MICROSERVICE_1:${{ env.GIT_COMMIT_HASH }}

  build-microservice-2:
    name: Build, Test, and Push Microservice 2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./microservice-2/requirements.txt
      - name: Run unit tests
        run: |
          set -o pipefail
          PYTHONPATH=./microservice-2 python3 -m unittest discover -s ./microservice-2/tests -p "*.py" 2>&1 | tee test-results-microservice-2.log || true
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: microservice-2-test-results-${{ github.run_id }}
          path: test-results-microservice-2.log
      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - name: Verify AWS Credentials
        run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] || [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "Error: AWS credentials are missing."
            exit 1
          fi
          echo "AWS credentials are present."
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
          audience: sts.amazonaws.com
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Get ECR Repository URL
        id: ecr-url
        run: |
          ECR_URL_MICROSERVICE_2=$(aws ecr describe-repositories --repository-names ${{ inputs.environment }}-microservice-2 --query 'repositories[0].repositoryUri' --output text)
          echo "ECR_URL_MICROSERVICE_2=$ECR_URL_MICROSERVICE_2" >> $GITHUB_ENV
      - name: Get Git Commit Hash
        id: git-info
        run: echo "GIT_COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Build and Push Docker Image
        run: |
          docker build -t $ECR_URL_MICROSERVICE_2:latest -t $ECR_URL_MICROSERVICE_2:${{ env.GIT_COMMIT_HASH }} ./microservice-2
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $ECR_URL_MICROSERVICE_2
          docker push $ECR_URL_MICROSERVICE_2:latest
          docker push $ECR_URL_MICROSERVICE_2:${{ env.GIT_COMMIT_HASH }}
